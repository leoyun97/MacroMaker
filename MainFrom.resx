<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>